name: Terminus Java

on:
  workflow_call:
    inputs:
      java-branch:
        description: 'Java branch'
        required: true
        type: string
      node-version:
        description: 'Node build repo'
        required: true
        type: string

jobs:
  build:

    name: Terminus Java
    runs-on: ubuntu-latest

    steps:

      - uses: tyriis/docker-image-tag-exists@v2.0.0
        id: cctl-docker-image-exists
        with:
          registry: docker.io
          repository: stormeye2000/cspr-cctl
          tag: '${{ github.event.inputs.node-version }}'

      - name: Checkout the dockerfile
        uses: actions/checkout@v4.1.1

      - name: CCTL Docker Image Exists
        if: ${{ steps.cctl-docker-image-exists.outputs.tag == 'found' }}
        run: |
          echo "Using docker.io image...${{ github.event.inputs.node-version }}"         
          docker run --rm -it --name cspr-cctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-cctl:${{ github.event.inputs.node-version }}

      - name: CCTL Docker Image Doesn't Exist
        if: ${{ steps.cctl-docker-image-exists.outputs.tag != 'found' }}
        run: |
          echo "Building docker image...${{ github.event.inputs.node-version }}"
          docker build --build-arg="GITBRANCH=${{ github.event.inputs.node-version }}" -t stormeye2000/cspr-cctl .
          docker run --rm -it --name cspr-cctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-cctl     

      - name: Wait for CCTL
        run: |
          echo "Wait for CCTL"
          sleep 30s         

      # Checkout the test platform Java code
      - name: Checkout the test platform Java code
        uses: actions/checkout@v4.1.1
        with:
          repository: casper-sdks/terminus-java-tests
          path: terminus-java-tests
          ref: main

      # JDK environment to build the SDK jar
      - name: Setup SDK Java environment
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      # Build environment
      - name: Build test environment
        run: |
          cd terminus-java-tests/script && chmod +x terminus
          ./terminus build -b ${{ github.event.inputs.java-branch }} -n ${{ github.event.inputs.node-version }} 

      # Run the actual cucumber tests
      - name: Test with cucumber
        run: |
          cd terminus-java-tests/script
          ./terminus test

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'casper-java-sdk/build/reports/e2e/*.xml'
          check_name: Java
          detailed_summary: true
          include_passed: true

      - name: Upload Junit Test Output
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: java-junit-test-report
          path: casper-java-sdk/build/reports/e2e/*.xml