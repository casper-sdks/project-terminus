name: Terminus C#

on:
  workflow_call:
    inputs:
      dot-net-branch:
        description: 'C# branch'
        type: string
        required: false
      node-version:
        description: 'Node build repo'
        required: true
        type: string

jobs:

  build:

    name: Terminus C#
    runs-on: ubuntu-latest

    steps:

      - uses: tyriis/docker-image-tag-exists@v2.0.0
        id: nctl-docker-image-exists
        with:
          registry: docker.io
          repository: stormeye2000/cspr-nctl
          tag: '${{ github.event.inputs.node-version }}'

      - name: Checkout the dockerfile
        uses: actions/checkout@v4.1.1

      - name: NCTL Docker Image Exists
        if: ${{ steps.nctl-docker-image-exists.outputs.tag == 'found' }}
        run: |
          echo "Using docker.io image...${{ github.event.inputs.node-version }}"         
          docker run --rm -it --name cspr-nctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-nctl:${{ github.event.inputs.node-version }}

      - name: NCTL Docker Image Doesn't Exist
        if: ${{ steps.nctl-docker-image-exists.outputs.tag != 'found' }}
        run: |
          echo "Building docker image...${{ github.event.inputs.node-version }}"
          docker build --build-arg="GITBRANCH=${{ github.event.inputs.node-version }}" -t stormeye2000/cspr-nctl .
          docker run --rm -it --name cspr-nctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-nctl        

      - name: Wait for NCTL
        run: |
          echo "Wait for NCTL"
          sleep 30s

      - name: Checkout SDK source code
        uses: actions/checkout@v4.1.1
        with:
          repository: make-software/casper-net-sdk
          ref: ${{ inputs.dot-net-branch }}
          path: casper-net-sdk

      - name: Checkout the test platform
        uses: actions/checkout@v4.1.1
        with:
          repository: casper-sdks/terminus-dotnet-tests
          path: terminus-dotnet-tests
          ref: main

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: |
          cd casper-net-sdk
          dotnet build --configuration Release
          cd ../terminus-dotnet-tests/TerminusDotNet

          dotnet remove package Casper.Network.SDK
          dotnet add reference ../../casper-net-sdk/Casper.Network.SDK/Casper.Network.SDK.csproj
          dotnet restore

      - name: Build
        run: |
          cd terminus-dotnet-tests/TerminusDotNet
          dotnet build --no-restore

      - name: Test
        run: |
          cd terminus-dotnet-tests/TerminusDotNet/script
          chmod +x docker-copy-assets && ./docker-copy-assets && cd ..
          
          dotnet test --no-build --logger:junit --results-directory reports

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        # always run even if the previous step fails
        if: success() || failure()
        with:
          check_name: C#
          report_paths: 'terminus-dotnet-tests/TerminusDotNet/reports/*.xml'
          detailed_summary: true
          include_passed: true

      - name: Upload Junit Test Output
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: dotnet-junit-test-report
          path: terminus-dotnet-tests/TerminusDotNet/reports/TestResults.xml