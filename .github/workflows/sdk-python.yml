# This workflow will:
#   - download and start a NCTL docker image
#   - download the latest casper-python-sdk
#   - download the test platform
#   - run the cucumber tests via behave

name: Project Terminus Python
on:
  workflow_call:
    inputs:
      python-repo:
        description: 'Python Repo'
        required: false
        type: string
      node-version:
        description: 'Node build repo'
        required: true
        type: string

jobs:
  build:
    name: Terminus Python
    runs-on: ubuntu-latest

    steps:
      - uses: tyriis/docker-image-tag-exists@v2.0.0
        id: nctl-docker-image-exists
        with:
          registry: docker.io
          repository: stormeye2000/cspr-nctl
          tag: '${{ github.event.inputs.node-version }}'

      - name: Checkout the dockerfile
        uses: actions/checkout@v3

      - name: NCTL Docker Image Exists
        if: ${{ steps.nctl-docker-image-exists.outputs.tag == 'found' }}
        run: |
          echo "Using docker.io image...${{ github.event.inputs.node-version }}"         
          docker run --rm -it --name cspr-nctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-nctl:${{ github.event.inputs.node-version }}

      - name: NCTL Docker Image Doesn't Exist
        if: ${{ steps.nctl-docker-image-exists.outputs.tag != 'found' }}
        run: |
          echo "Building docker image...${{ github.event.inputs.node-version }}"
          docker build --build-arg="GITBRANCH=${{ github.event.inputs.node-version }}" -t stormeye2000/cspr-nctl .
          docker run --rm -it --name cspr-nctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-nctl  

      - name: Wait for NCTL
        run: |
          echo "Wait for NCTL"
          sleep 30s

      # Checkout the latest Casper Python SDK from their repo ready for a build
      - name: Checkout SDK source code
        uses: actions/checkout@v2
        with:
          repository: casper-network/casper-python-sdk
          ref: ${{ github.event.inputs.python-repo }}
          path: casper-python-sdk

      # Checkout the test platform Python code
      - name: Checkout the test platform Python code
        uses: actions/checkout@v2
        with:
          repository: stormeye2000/cspr-sdk-standard-tests-python
          path: cspr-sdk-standard-tests-python
          ref: main

      # Set up Python
      - name: Set Up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Run the actual cucumber tests
      - name: Test with cucumber
        run: |

          cd cspr-sdk-standard-tests-python/sh && 
          chmod +x docker-copy-assets.sh && 
          ./docker-copy-assets.sh && cd ../..  
          
          cd casper-python-sdk
          sudo pip install -e .

          cd ../cspr-sdk-standard-tests-python
          pip install -r requirements.txt
          pip install behave
          behave test/features --junit

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'cspr-sdk-standard-tests-python/reports/*.xml'
          detailed_summary: true
          include_passed: true
          summary: true
