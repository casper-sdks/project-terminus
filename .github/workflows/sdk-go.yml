name: Terminus Go
on:
  workflow_call:
    inputs:
      go-branch:
        description: 'Go branch'
        required: false
        type: string
      node-version:
        description: 'Node build repo'
        required: true
        type: string

jobs:
  build:
    name: Terminus Go
    runs-on: ubuntu-latest

    steps:
      - uses: tyriis/docker-image-tag-exists@v2.0.0
        id: cctl-docker-image-exists
        with:
          registry: docker.io
          repository: stormeye2000/cspr-cctl
          tag: '${{ github.event.inputs.node-version }}'

      - name: Checkout the dockerfile
        uses: actions/checkout@v4.1.1

      - name: CCTL Docker Image Exists
        if: ${{ steps.cctl-docker-image-exists.outputs.tag == 'found' }}
        run: |
          echo "Using docker.io image...${{ github.event.inputs.node-version }}"         
          docker run --rm -it --name cspr-cctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-cctl:${{ github.event.inputs.node-version }}

      - name: CCTL Docker Image Doesn't Exist
        if: ${{ steps.cctl-docker-image-exists.outputs.tag != 'found' }}
        run: |
          echo "Building docker image...${{ github.event.inputs.node-version }}"
          docker build --build-arg="GITBRANCH=${{ github.event.inputs.node-version }}" -t stormeye2000/cspr-cctl .
          docker run --rm -it --name cspr-cctl -d -p 25101:25101 -p 11101:11101 -p 14101:14101 -p 18101:18101 stormeye2000/cspr-cctl  

      - name: Wait for CCTL
        run: |
          echo "Wait for CCTL"
          sleep 30s

      # Checkout the test platform Python code
      - name: Checkout the test platform Go code
        uses: actions/checkout@v4.1.1
        with:
          repository: casper-sdks/terminus-go-tests
          path: terminus-go-tests
          ref: main

      # Setup Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.6'
      - run: go version

      # Run tests using gotestsum which will produce a junit file
      - name: Test
        run: |
          cd terminus-go-tests/script
          chmod +x docker-copy-assets && ./docker-copy-assets && cd ..
          
          go get github.com/make-software/casper-go-sdk@${{ github.event.inputs.go-branch }}
          go install gotest.tools/gotestsum@latest
          mkdir reports
          gotestsum --format standard-verbose --junitfile reports/report.xml


      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure()
        with:
          check_name: Go
          report_paths: 'terminus-go-tests/reports/*.xml'
          detailed_summary: true
          include_passed: true

      - name: Upload Junit Test Output
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: go-junit-test-report
          path: terminus-go-tests/reports/report.xml